ORG 0000H          ; 程序存储器从地址0000H开始
    SJMP START     ; 跳转到程序开始处

START:
    ACALL DELAY100MS    ; 延时0.1秒
    SJMP START     ; 重复循环
    
DELAY100MS:			;@12.000MHz
    PUSH 30H       ; 将寄存器30H的值压入堆栈    2us
    PUSH 31H       ; 将寄存器31H的值压入堆栈    2us
    MOV 30H,#195   ; 将值195（0xC3）赋给地址30H，作为外层循环的计数器   2us
    MOV 31H,#133   ; 将值133（0x85）赋给地址31H，作为内层循环的计数器   2us  //2us*4=8us
NEXT:
    DJNZ 31H,NEXT  ; 内层循环，计数器31H不为0时继续循环，注意在第二次开始该循环时31H的值为0x00，减一后为0xFF（255），一次内循环执行256次。
    DJNZ 30H,NEXT  ; 外层循环，计数器30H不为0时继续循环，注意第一次内循环特殊，实际255*2us的内循环执行了194次。
;	2us*133+2us*256*194+2us*195=99984us
;	第一次内循环用时+第2-195次内循环用时+195次外循环用时
    POP 31H        ; 从堆栈中弹出数据并恢复到寄存器31H  2us
    POP 30H        ; 从堆栈中弹出数据并恢复到寄存器30H  2us
    RET      ; 返回调用处  2us	//2us*3=6us
;	2+8+99984+6=100000us=100ms=0.1s
;	调用延时函数用时+入栈赋值用时+二重循环用时+出栈返回用时
END 	;   无限循环函数，END没什么用