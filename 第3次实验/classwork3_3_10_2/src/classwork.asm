ORG 0000H          ; 程序存储器从地址0000H开始
    SJMP START     ; 跳转到程序开始处

START:
    ACALL DELAY1000MS    ; 延时1秒
    SJMP START     ; 重复循环

DELAY1000MS:			;@12.000MHz
	PUSH 30H       ; 将寄存器30H的值压入堆栈    2us
	PUSH 31H       ; 将寄存器31H的值压入堆栈    2us
	PUSH 32H       ; 将寄存器32H的值压入堆栈    2us
	MOV 30H,#8	   ; 将值8（0x08）赋给地址30H，作为外层循环的计数器   2us
	MOV 31H,#154   ; 将值154（0x9A）赋给地址31H，作为内层循环的计数器   2us
	MOV 32H,#115   ; 将值115（0x73）赋给地址32H，作为内层循环的计数器   2us
	;2us*3+2s*3=12us

NEXT:
	DJNZ 32H,NEXT	; 内层循环，计数器32H不为0时继续循环，注意在第二次开始该循环时31H的值为0x00，减一后为0xFF（255），一次内循环执行256次。
	DJNZ 31H,NEXT	; 中间循环，计数器31H不为0时继续循环，注意在第二次开始该循环时30H的值为0x00，减一后为0xFF（255），一次外循环执行256次。
				    ; 此外注意第一次内循环特殊，实际255*2us的内循环执行了153次。
	DJNZ 30H,NEXT	; 外层循环，计数器30H不为0时继续循环，注意第一次内循环特殊，实际255*2us的内循环执行了7次。
	; 2us*115  +  2us*256*153+2us*154  +  2us*256*256*7+2us*256*7+2us*8=999978us
	; 独立内循环用时 + 嵌套内循环的中层循环用时+中层循环的计数器初始化用时 +  嵌套内层循环的外层循环用时+嵌套中层循环的外层循环用时+外层循环的计数器初始化用时
	
	POP 32H		; 弹出堆栈32H	2us
	POP 31H		; 弹出堆栈31H	2us
	POP 30H		; 弹出堆栈30H	2us
	RET			; 返回		2us	
	; 2us*3+2us=8us
	
; 	2us+12us+999978us+8us=2us+999998us=1000000us=1s
;	调用延时函数用时2us+入栈赋值用时12us+三重循环用时999978us+出栈返回用时8us=1000000us=1s

END	; 程序结束	  